'use strict';const{URL}=require('url'),centra=require('centra'),phin=async a=>{if('string'!=typeof a&&!a.hasOwnProperty('url'))throw new Error('Missing url option from options for request method.');const b=centra('object'==typeof a?a.url:a,a.method||'GET');a.headers&&b.header(a.headers),a.stream&&b.stream(),a.timeout&&b.timeout(a.timeout),a.data&&b.body(a.data),a.form&&b.body(a.form,'form');const c=await b.send();return c.headers.hasOwnProperty('location')&&a.followRedirects?(a.url=new URL(c.headers.location,a.url).toString(),await phin(a)):a.stream?(c.stream=c,c):(c.coreRes.body=c.body,a.parse&&'json'===a.parse?(c.coreRes.body=await c.json(),c.coreRes):c.coreRes)};phin.promisified=phin,phin.unpromisified=(a,b)=>{phin(a).then(c=>{b&&b(null,c)}).catch(c=>{b&&b(c,null)})},module.exports=phin;